- init:
    assign:
    - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
    - util_bucket_name: "magasin-cie-utils"
    - create_disposition: "CREATE_NEVER"  
    - write_disposition: "WRITE_TRUNCATE" 
- get_staging_basket_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "-" + util_bucket_name + "/queries/staging/basket.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: staging_basket_query
- get_staging_basket_detail_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "-" + util_bucket_name + "/queries/staging/basket_detail.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: staging_basket_detail_query
- get_cleaned_basket_header_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "-" + util_bucket_name + "/queries/cleaned/basket_header.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: cleaned_basket_header_query
- get_cleaned_basket_detail_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "-" + util_bucket_name + "/queries/cleaned/basket_detail.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: cleaned_basket_detail_query
- get_aggregated_day_sale_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "-" + util_bucket_name + "/queries/aggregated/day_sale.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: aggregated_day_sale_query
- get_aggregated_best_product_sale_query:
    call: http.get
    args:
      url: ${"https://storage.googleapis.com/" + project_id + "-" + util_bucket_name + "/queries/aggregated/best_product_sale.sql"}
      headers:
        Content-Type: "text/plain"
      auth:
        type: OAuth2  
    result: aggregated_best_product_sale_query
- staging_basket_insert:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${staging_basket_query.body}
            destinationTable:
              projectId: ${project_id}
              datasetId: staging
              tableId: basket
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
- staging_basket_detail_insert:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${staging_basket_detail_query.body}
            destinationTable:
              projectId: ${project_id}
              datasetId: staging
              tableId: basket_detail
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
- cleaned_basket_merge:
        call: googleapis.bigquery.v2.jobs.query
        args:
          projectId: ${project_id}
          body:
            query: ${cleaned_basket_header_query.body}
            useLegacySql: false
- cleaned_basket_detail_merge:
        call: googleapis.bigquery.v2.jobs.query
        args:
          projectId: ${project_id}
          body:
            query: ${cleaned_basket_detail_query.body}
            useLegacySql: false
- aggregated_day_sale_insert:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${aggregated_day_sale_query.body}
            destinationTable:
              projectId: ${project_id}
              datasetId: aggregated
              tableId: day_sale
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
- aggregated_best_product_sale_insert:
    call: googleapis.bigquery.v2.jobs.insert
    args:
      projectId: ${project_id}
      body:
        configuration:
          query:
            query: ${aggregated_best_product_sale_query.body}
            destinationTable:
              projectId: ${project_id}
              datasetId: aggregated
              tableId: best_product_sale
            create_disposition: ${create_disposition}
            write_disposition: ${write_disposition}
            allowLargeResults: true
            useLegacySql: false
- the_end:
    return: "SUCCESS"
